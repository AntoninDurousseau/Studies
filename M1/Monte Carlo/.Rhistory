X1 <- rnorm(n,0,1)
p1 <- h(X1)
X2 <- rexp(n,1)
p2 <- h(X2)
cat(sprintf("First estimator by Monte Carlo method : mean is %f and var is %f \n", mean(p1),var(p1)))
cat(sprintf("Second estimator by Monte Carlo method : mean is %f and var is %f \n", mean(p1),var(p1)))
n <- 10000
h <-function(x){
return(x >= 2)
}
f <- function(x){
return(exp(-x^2))
}
#classical Monte Carlo:
X1 <- rnorm(n,0,1)
p1 <- h(X1)
X2 <- rexp(n,1)
p2 <- h(X2)
cat(sprintf("First estimator by Monte Carlo method : mean is %f and var is %f \n", mean(p1),var(p1)))
cat(sprintf("Second estimator by Monte Carlo method : mean is %f and var is %f \n", mean(p2),var(p2)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3/2))
}
h <- function(x,y){
return(4*sqrt(pi)/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3/2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X)/g(X) * h(X,Y)
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3/2))
}
h <- function(x,y){
return(4*sqrt(pi)/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3/2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3/2))
}
h <- function(x,y){
return(3/(4*sqrt(pi)) * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3/2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3/2))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3/2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3/2))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3/2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3/2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y){
return(exp(- y - 3))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,1) + 3
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y,lam){
return(exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
n <- 10000
lam <- 2
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y,lam){
return(exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(X)/gY(X) * h(X,Y)
n <- 10000
lam <- 2
fX <- function(x){
return(3/2 * exp(- 3/2 * x))
}
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(y,lam){
return(exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) * fX(x) * fY(y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- fY(Y)/gY(Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *)
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
gY <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y)*(x > 0))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)) * (2 <= y)*(x > 0))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)) * (2 <= y))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
n <- 10000
lam <- 2
f <- function(x,y){
return(3/2 * exp(- 3/2 * x) * 1/(2*sqrt(pi)) * exp(-y^2/4))
}
g <- function(x,y,lam){
return(3/2 * exp(- 3/2 * x) * lam * exp(-lam * (y - 2)))
}
h <- function(x,y){
return((4*sqrt(pi))/3 * sqrt(x+y) * sin(y^4) *f(x,y))
}
X <- rexp(n,3/2)
Y <- rexp(n,lam) + 2
Y[Y <= 2] <- 0
X[X >= 5] <- 0
X[X >= 0] <- 0
p <- f(X,Y)/g(X,Y,lam) * h(X,Y)
cat(sprintf("Induction method : mean is %f and var is %f", mean(p),var(p)))
fY <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) *(2 <= y))
}
fX <- function(x){
return(1/5 * (0 <= x & x <= 5))
}
h <- function(x,y){
return(10 * sqrt(pi) * sqrt(x+y) * sin(y^4) * exp(-3*x/2) * fX(x) * fY(y))
}
n <- 10000
X <- runif(n,0,5)
Y <- rnorm(n,0,2)
Y[Y <= 2] <- 0
delta <- mean(h(X,Y))
fY_2 <- function(y){
return(1/(2*sqrt(pi)) * exp(-y^2/4) * (2 <= y))
}
fX_2 <- function(x){
return(3/2 * exp(-3*x/2))
}
h <- function(x,y){
return(4*sqrt(pi)/3 * sqrt(x+y) * sin(y^4) * fX_2(x) * fY_2(y))
}
n <- 10000
X <- rexp(n,3/2)
Y <- rnorm(n,0,2)
Y[Y <= 2] <- 0
X[X >= 5] <- 0
delta2 <- mean(h(X,Y))
delta
delta2
